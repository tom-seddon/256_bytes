                .include "submodules/beeb/include/beeb.s65"
                
*=$70
                .dsection zp
                
*=$1900
                .dsection code
                
                .section zp
                .send zp

                .section code
                
                ldx #text.init-text
                ldy #text.init.end-text.init
                jsr print

init_loop:
                ldx lines_counter
                lda xs,x
                sta text.message.x+0
                
                asl text.message.x+0
                rol a
                asl text.message.x+0
                rol a
                asl text.message.x+0
                rol a

                and #7
                sta text.message.x+1

                ldx #text.message-text
                ldy #text.message.end-text.message
                jsr print

                clc
                lda text.message.y+0
                adc #32
                sta text.message.y+0
                bcc +
                inc text.message.y+1
+
                dec lines_counter
                bpl init_loop

                sei
main_loop:
                clc
                
                ldx #13
                stx $fe00
                lda $fe01
                adc #80
                sta $fe01

                dex
                stx $fe00
                lda $fe01
                adc #0
                cmp #$10
                bcc +
                lda #$06
+
                sta $fe01

                lda #2
-
                bit system_via.ifr
                beq -
                sta system_via.ifr

                ldx #19
x_loop:
                ldy #128
y_loop:
                lda system_via.t1c_h
                ora #$f0
                ;and #$0f
                sta video_ula_palette

                dey
                bne y_loop

                dex
                bne x_loop

                beq main_loop
                
                rts

print:
                lda text,x
                jsr oswrch
                inx
                dey
                bne print
                rts

lines_counter:
                .byte 31

message_len=text.message.text_end-text.message.text
                
xs:
                .for i:=0, i<32, i+=1
                .byte 80-message_len/2*8+int(sin(i/31.0*2.0*pi)*4)
                .next
                
text: .block
init: .block
                .text 22,2
                .text 5
                .text 18,0,15   ;CGOL 0,15
end: .bend

message: .block
                .text 25,4      ;PLOT4 = MOVE
x:
                .word 0
y:
                .word 31
text:
                .text "BITSHIFTERS"
text_end:
end: .bend                

                .bend
                
                .send code