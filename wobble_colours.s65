                .include "submodules/beeb/include/beeb.s65"
                
*=$70
                .dsection zp
                
*=$1900
                .dsection code
                
                .section zp
tmp:
                .fill 1
                .send zp

                .section code
                
                ldx #text.init-text
                jsr print

init_loop:
                ldx lines_counter
                lda xs,x

                asl a
                rol tmp
                asl a
                rol tmp
                asl a

                sta text.x+1
                
                lda tmp
                rol a
                and #7
                sta text.x+0

                ldx #text.message-text
                jsr print

                clc
                lda text.y+1
                adc #32
                sta text.y+1
                bcc +
                inc text.y+0
+
                dec lines_counter
                bpl init_loop

                sei
main_loop:
                clc
                
                ldx #13
                stx $fe00
                lda $fe01
                adc #80
                sta $fe01

                dex
                stx $fe00
                lda $fe01
                adc #0
                cmp #$10
                bcc +
                lda #$06
+
                sta $fe01

                lda #2
-
                bit system_via.ifr
                beq -
                sta system_via.ifr

                ldx #19
x_loop:
                ldy #128
y_loop:
                lda system_via.t1c_h
                ora #$f0
                ;and #$0f
                sta video_ula_palette

                dey
                bne y_loop

                dex
                bne x_loop

                beq main_loop
                
                rts

print:
                lda text,x
                jsr oswrch
                dex
                bpl print
                rts

lines_counter:
                .byte 31

message_text="BITSHIFTERS"
init_text=[22,2,5,18,0,15]
                
xs:
                .for i:=0, i<32, i+=1
                .byte 80-int(len(message_text)/2.0*8+sin(i/31.0*2.0*pi)*8)
                .next

text: .block
                .text message_text[::-1]
y:
                .byte 0         ;MSB
                .byte 31         ;LSB
x:
                .byte >1280     ;MSB
                .byte <1280     ;LSB
                .text 4,25      ;PLOT4 = MOVE
message:
                .text 15,0,18   ;GCOL 0,15
                .text 5
                .text 2,22      ;MODE 2
init:
                .bend
                
                .send code