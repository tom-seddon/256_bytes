                .include "submodules/beeb/include/beeb.s65"
                .cpu '65c02'

;-------------------------------------------------------------------------

terminal_rom=15

                ; naughty MOS 3.20 entry points
font_data=$b900
; set_crtc_address_for_mode7=$c70d
                
;-------------------------------------------------------------------------


*=$70
                .dsection zp
*=$1900
                .dsection code

;-------------------------------------------------------------------------

                .section zp
top_left: .fill 2
dest: .fill 2
glyph: .fill 2
index: .fill 1
                .endsection zp

; Scroller: .struct text,n
; index: .byte \text-scrolltexts
; max_index: .byte \n
; reset_index: .byte \text-scrolltexts
; counter: .byte 0
; mask: .byte 128
;                 .endstruct

scroll_text: .macro text
                .for i=0,i<len(\text),i+=1
                .cerror (\text[i]<'A'||\text[i]>'Z'),"letters only"
                .byte $80|((\text[i]-64)*4)
                .endfor
                .endmacro

;-------------------------------------------------------------------------

                .section code
start:
                lda #22
                jsr oswrch
                
                lda #5
                jsr oswrch

                stz index

                sei
                lda #terminal_rom
                ;sta $f4
                sta romsel

                ldx #6
                lda #25
                jsr write_crtc

                ;stz index

reset_top_left:
                lda #$7c
                sta top_left+1

main_loop:
                ldx #12
                lda top_left+1
                sta dest+1
                eor #$54
                jsr write_crtc
                inx
                lda top_left+0
                sta dest+0
                jsr write_crtc

                lda #VIAIRQ.ca1
-
                bit system_via.ifr ;V when T1
                beq -
                sta system_via.ifr

                inc top_left+0
                bne +
                inc top_left+1
                bpl +
                lda #$7c
                sta top_left+1
+

                ldx #0
                jsr write_1_row
                
                ldx index
                lda scrolltexts,x
                asl a
                sta read_glyph+1
                ldy #0
write_glyph_row:
                ldx #0
read_glyph:
                lda $ba00,y
                and mask
                beq +
                dex
+
                jsr write_1_row
                jsr write_1_row
                jsr write_1_row
                iny
                cpy #8
                bne write_glyph_row

                lsr mask
                bcc main_loop

                ror mask

                ldx index
                inx
                lda scrolltexts,x
                bmi +
                tax
+
                stx index
                bra main_loop
                
write_crtc:
                stx $fe00
                sta $fe01
                rts

write_1_row:
                clc
                lda dest+0
                adc #40
                sta dest+0
                bcc +
                inc dest+1
                bpl +
                lda #$7c
                sta dest+1
+
                txa
                sta (dest)
                rts

mask: .byte 128
; index: .byte 0
                
scrolltexts:
lovebyte: .block
                .scroll_text 'LOVEBYTE'
                .byte lovebyte-scrolltexts
bitshifters:
                .scroll_text 'BITSHIFTERS'
                .byte bitshifters-scrolltexts
                .endblock
                
                 .endsection code
                