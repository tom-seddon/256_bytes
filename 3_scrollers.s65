                .include "submodules/beeb/include/beeb.s65"
                .cpu '65c02'

;-------------------------------------------------------------------------

terminal_rom=15

                ; naughty MOS 3.20 entry points
font_data=$b900
; set_crtc_address_for_mode7=$c70d
                
;-------------------------------------------------------------------------


*=$70
                .dsection zp
*=$1900
                .dsection code

;-------------------------------------------------------------------------

                .section zp
top_left: .fill 2
dest: .fill 2
glyph: .fill 2
index: .fill 1
                .endsection zp

; Scroller: .struct text,n
; index: .byte \text-scrolltexts
; max_index: .byte \n
; reset_index: .byte \text-scrolltexts
; counter: .byte 0
; mask: .byte 128
;                 .endstruct

scroll_text: .macro text
                .for i=0,i<len(\text),i+=1
                .cerror (\text[i]<32),"no control chars"
                .cerror (\text[i]&$80)!=0,"7-bit strings only"

c:=\text[i]-31

                ; %abcdefgh => %defghabc
                .byte (c&%01100000)>>5|(c&%00011111)<<3|(i==len(\text)-1?%00000100:0)
                .endfor
                .endmacro

;-------------------------------------------------------------------------

                .section code
start:
                lda #22
                jsr oswrch
                
                lda #5
                jsr oswrch

                lda #terminal_rom
                sta $f4
                sta romsel

                sei

                lda #0
                sta $fe20
                clc
-
                sta $fe21
                adc #$11
                bcc -

                ldx #6
                lda #25
                jsr write_crtc

                stz index

reset_top_left:
                stz top_left+0
                lda #$7c
                sta top_left+1

main_loop:
                ldx #12
                lda top_left+1
                pha
                ;sta dest+1
                eor #$54
                ; eor #$74
                ; eor #$20
                jsr write_crtc
                inx
                lda top_left+0
                sta dest+0
                jsr write_crtc

                lda #VIAIRQ.ca1
-
                bit system_via.ifr ;V when T1
                beq -
                sta system_via.ifr

                inc top_left+0
                bne +
                lda top_left+1
                jsr inc_msb     ;also modifies dest?1
                sta top_left+1
+

                pla
                sta dest+1
                
                jsr add_40_to_dest

                lda #$ff
                sta (dest)


                jsr add_40_to_dest
write_glyph_rows:
                ldx index
                lda bitshifters,x
                pha
                and #%00000011
                ora #(>font_data-1)
                sta glyph+1
                pla
                and #%11111000
                sta glyph+0
                ldy #$f8
-
                ldx #255
                lda (glyph),y
                and mask
                beq +
                inx
+
                jsr write_3_rows
                iny
                bne -

                lsr mask
                bcc main_loop

                ror mask
                inc index
                lda index
                cmp #size(bitshifters)
                bne main_loop
                stz index
                bra main_loop
                
write_crtc:
                stx $fe00
                sta $fe01
                rts

write_3_rows:
                jsr write_1_row
                jsr write_1_row
write_1_row:
                txa
                sta (dest)
add_40_to_dest:
                clc
                lda dest+0
                adc #40
                sta dest+0
                bcc ++
                lda dest+1
inc_msb:
                inc a
                bpl +
                lda #$7c
+
                sta dest+1
+
                rts

mask: .byte 128
; index: .byte 0
                
scrolltexts:
bitshifters: .block
                .scroll_text 'LOVEBYTE';X Y Z';LOVEBYTE';'BITSHIFTERS'
                .endblock
                
                 .endsection code
                